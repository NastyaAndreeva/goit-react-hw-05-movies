{"version":3,"file":"static/js/109.8129faae.chunk.js","mappings":"yVAGaA,EAAWC,IAAAA,OAAa,CACnCC,QAASC,EAAAA,GACTC,OAAQ,CACNC,QAASC,EAAAA,GACTC,SAAU,QACVC,eAAe,KCJNC,EAAkB,mCAAG,6GAEPT,EAASU,IAAI,uBAFN,cAExBC,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,gCAK9BC,EAAAA,GAAAA,MAAA,MAL8B,yDAAH,qDASlBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDhB,EAASU,IAAT,iBAAuBM,IAFtB,cAElBL,EAFkB,yBAGjBA,EAASC,MAHQ,gCAKxBE,EAAAA,GAAAA,MAAA,MALwB,yDAAH,sDASZG,EAAe,mCAAG,WAAMD,GAAN,gGAEJhB,EAASU,IAAT,iBAAuBM,EAAvB,aAFI,cAErBL,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAA,MAL2B,yDAAH,sDASfI,EAAe,mCAAG,WAAMF,GAAN,gGAEJhB,EAASU,IAAT,iBAAuBM,EAAvB,aAFI,cAErBL,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAA,MAL2B,yDAAH,sDASfK,EAAiB,mCAAG,WAAMC,GAAN,gGAENpB,EAASU,IAAT,iBAA+B,CACpDN,OAAQ,CACNgB,MAAAA,KAJyB,cAEvBT,EAFuB,yBAOtBA,EAASC,MAPa,gCAS7BE,EAAAA,GAAAA,MAAA,MAT6B,yDAAH,uD,sGCxCvB,IAAMR,EAAU,mCACVH,EAAW,gCACXkB,EAAU,oC,oJCAVC,E,QAAoBC,GAAAA,GAAH,4D,SCAjBC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,SAACH,EAAD,UACGG,EAAQC,MAAM,EAAG,IAAIC,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACxB,2BACE,wBAAKD,KAEL,uBAAIC,MAHGb,SCejB,EAhBgB,WACd,OAA8Bc,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAUC,OAAOH,EAASI,MAAMpB,IAUtC,OARAqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uGACSrB,EAAAA,EAAAA,IAAgBiB,GADzB,gBACTrB,EADS,EACTA,QACRkB,EAAWlB,GAFM,2CAAH,qDAIhByB,MACC,CAACJ,KAEG,SAACV,EAAD,CAAaC,QAASA","sources":["api/api.js","api/fetchMovie.js","constants/constants.js","pages/MovieDetails/Reviews/ReviewsList/ReviewsList.styled.js","pages/MovieDetails/Reviews/ReviewsList/ReviewsList.jsx","pages/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants';\n\nexport const movieApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { movieApi } from './api';\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await movieApi.get('/trending/movie/day');\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieInfo = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/reviews`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/credits`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMoviesBySearch = async query => {\n  try {\n    const response = await movieApi.get(`/search/movie/`, {\n      params: {\n        query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n","export const API_KEY = 'ee4d1e0ba38fba5e2a885fcbcf829637';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import styled from 'styled-components';\n\nexport const ReviewsListStyled = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import { ReviewsListStyled } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ReviewsListStyled>\n      {reviews.slice(0, 19).map(({ id, author, content }) => (\n        <li key={id}>\n          <h4>{author}</h4>\n\n          <p>{content}</p>\n        </li>\n      ))}\n    </ReviewsListStyled>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieReviews } from 'api/fetchMovie';\nimport { ReviewsList } from './ReviewsList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const location = useLocation();\n  const movieId = Number(location.state.id);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const { results } = await getMovieReviews(movieId);\n      setReviews(results);\n    };\n    getReviews();\n  }, [movieId]);\n\n  return <ReviewsList reviews={reviews} />;\n};\n\nexport default Reviews;\n"],"names":["movieApi","axios","baseURL","BASE_URL","params","api_key","API_KEY","language","include_adult","fetchTrendingMovie","get","response","data","results","toast","getMovieInfo","id","getMovieReviews","getMovieCredits","getMoviesBySearch","query","IMG_URL","ReviewsListStyled","styled","ReviewsList","reviews","slice","map","author","content","useState","setReviews","location","useLocation","movieId","Number","state","useEffect","getReviews"],"sourceRoot":""}