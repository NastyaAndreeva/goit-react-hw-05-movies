{"version":3,"file":"static/js/453.3ecfd5bd.chunk.js","mappings":"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","sources":["api/api.js","api/fetchMovie.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","constants/constants.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants';\n\nexport const movieApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { movieApi } from './api';\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await movieApi.get('/trending/movie/day');\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieInfo = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/reviews`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/credits`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMoviesBySearch = async query => {\n  try {\n    const response = await movieApi.get(`/search/movie/`, {\n      params: {\n        query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const CardWrapper = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n  padding: 10px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MovieListStyled,\n  CardWrapper,\n} from 'components/MovieList/MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, title, overview, original_name }) => {\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <h2>{title ?? original_name}</h2>\n              <p>{overview}</p>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </MovieListStyled>\n  );\n};\n","export const API_KEY = 'ee4d1e0ba38fba5e2a885fcbcf829637';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const SearchBarheader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.searchBarBgc};\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchBarInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchBarForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchBarButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchBarButtonLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { Formik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { ImSearch } from 'react-icons/im';\nimport {\n  SearchBarInput,\n  SearchBarForm,\n  SearchBarButton,\n  SearchBarheader,\n  SearchBarButtonLabel,\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const handleSubmit = ({ searchQuery }, { resetForm }) => {\n    if (searchQuery.trim() === '') {\n      return toast.error('Please, enter search query.');\n    }\n    onSubmit(searchQuery);\n    resetForm();\n  };\n\n  return (\n    <SearchBarheader>\n      <Formik initialValues={{ searchQuery: '' }} onSubmit={handleSubmit}>\n        <SearchBarForm>\n          <SearchBarInput type=\"text\" name=\"searchQuery\" />\n          <SearchBarButton type=\"submit\">\n            <SearchBarButtonLabel />\n            <ImSearch />\n          </SearchBarButton>\n        </SearchBarForm>\n      </Formik>\n    </SearchBarheader>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar';\nimport { MovieList } from 'components/MovieList';\nimport { getMoviesBySearch } from 'api/fetchMovie';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('search') ?? '';\n\n  useEffect(() => {\n    if (filmName === '') {\n      return;\n    }\n    const getMovies = async () => {\n      const response = await getMoviesBySearch(filmName);\n      setMovies(response.results);\n    };\n    getMovies();\n  }, [filmName]);\n\n  const onSubmit = search => {\n    setSearchParams(search);\n    const nextParams = search !== '' ? { search } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movieApi","axios","baseURL","BASE_URL","params","api_key","API_KEY","language","include_adult","fetchTrendingMovie","get","response","data","results","toast","getMovieInfo","id","getMovieReviews","getMovieCredits","getMoviesBySearch","query","MovieListStyled","styled","CardWrapper","MovieList","movies","location","useLocation","map","title","overview","original_name","to","state","from","IMG_URL","SearchBarheader","theme","colors","white","searchBarBgc","SearchBarInput","Field","SearchBarForm","Form","SearchBarButton","SearchBarButtonLabel","SearchBar","onSubmit","initialValues","searchQuery","resetForm","trim","type","name","useState","setMovies","useSearchParams","searchParams","setSearchParams","filmName","useEffect","getMovies","search"],"sourceRoot":""}