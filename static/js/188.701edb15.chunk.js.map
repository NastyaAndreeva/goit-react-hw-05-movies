{"version":3,"file":"static/js/188.701edb15.chunk.js","mappings":"yVAGaA,EAAWC,IAAAA,OAAa,CACnCC,QAASC,EAAAA,GACTC,OAAQ,CACNC,QAASC,EAAAA,GACTC,SAAU,QACVC,eAAe,KCJNC,EAAkB,mCAAG,6GAEPT,EAASU,IAAI,uBAFN,cAExBC,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,gCAK9BC,EAAAA,GAAAA,MAAA,MAL8B,yDAAH,qDASlBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDhB,EAASU,IAAT,iBAAuBM,IAFtB,cAElBL,EAFkB,yBAGjBA,EAASC,MAHQ,gCAKxBE,EAAAA,GAAAA,MAAA,MALwB,yDAAH,sDASZG,EAAe,mCAAG,WAAMD,GAAN,gGAEJhB,EAASU,IAAT,iBAAuBM,EAAvB,aAFI,cAErBL,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAA,MAL2B,yDAAH,sDASfI,EAAe,mCAAG,WAAMF,GAAN,gGAEJhB,EAASU,IAAT,iBAAuBM,EAAvB,aAFI,cAErBL,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,EAAAA,GAAAA,MAAA,MAL2B,yDAAH,sDASfK,EAAiB,mCAAG,WAAMC,GAAN,gGAENpB,EAASU,IAAT,iBAA+B,CACpDN,OAAQ,CACNgB,MAAAA,KAJyB,cAEvBT,EAFuB,yBAOtBA,EAASC,MAPa,gCAS7BE,EAAAA,GAAAA,MAAA,MAT6B,yDAAH,uD,sGCxCvB,IAAMR,EAAU,mCACVH,EAAW,gCACXkB,EAAU,oC,0KCCVC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+OAKZ,qBAAGE,MAAkBC,OAAOC,SAU1BC,EAAqBL,EAAAA,GAAAA,GAAH,4MAUP,qBAAGE,MAAkBC,OAAOG,gB,mBC1BvCC,EAAmBP,EAAAA,GAAAA,IAAH,0CAIhBQ,EAAgBR,EAAAA,GAAAA,IAAH,0CAIbS,EAAeT,EAAAA,GAAAA,IAAH,sECRZU,EAAoBV,EAAAA,GAAAA,GAAH,8EAMjBW,EAAkBX,EAAAA,GAAAA,GAAH,8E,SCNfY,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5B,OACE,SAACH,EAAD,UACGG,EAAOC,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,KAAP,OACV,SAACJ,EAAD,UAA2BI,GAALtB,SCEjBuB,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EACND,EADMC,MAAOC,EACbF,EADaE,aAAcC,EAC3BH,EAD2BG,aAAcC,EACzCJ,EADyCI,SAAUR,EACnDI,EADmDJ,OAAQS,EAC3DL,EAD2DK,cAG7D,OACE,UAACf,EAAD,YACE,SAACE,EAAD,CACEc,IAAG,UAAKzB,EAAAA,IAAL,OAAewB,GAClBE,IAAG,UAAKN,GACRO,MAAM,MACNC,OAAO,SAET,UAAClB,EAAD,YACE,0BACGU,EADH,KACYC,EAAaQ,MAAM,EAAG,GADlC,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfT,GAA3B,QAEA,sCACA,uBAAIC,KACJ,oCACA,SAACT,EAAD,CAAaC,OAAQA,WCuB7B,EA9CqB,WAAO,IAAD,IACjBiB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOf,EAAP,KAAcgB,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAU7C,IARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,qGACK/C,EAAAA,EAAAA,IAAagD,OAAOV,IADzB,OACTb,EADS,OAEfgB,EAAShB,GAFM,2CAAH,qDAIdsB,MACC,CAACT,IAECb,EAIL,OACE,iCACE,4BACE,SAAClB,EAAD,CAAY0C,GAAIP,EAAhB,kCACA,SAAClB,EAAD,CAAWC,MAAOA,QAEpB,4BACE,oDACA,UAACZ,EAAD,YACE,yBACE,SAAC,KAAD,CAAMoC,GAAG,OAAOL,MAAO,CAAE3C,GAAIqC,EAASO,KAAMH,GAA5C,oCAIF,yBACE,SAAC,KAAD,CAAMO,GAAG,UAAUL,MAAO,CAAE3C,GAAIqC,EAASO,KAAMH,GAA/C,2CAKJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD","sources":["api/api.js","api/fetchMovie.js","constants/constants.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieCard/MovieCard.styled.js","pages/MovieDetails/MovieCard/MovieGenres/MovieGenres.styled.js","pages/MovieDetails/MovieCard/MovieGenres/MovieGenres.jsx","pages/MovieDetails/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants';\n\nexport const movieApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { movieApi } from './api';\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await movieApi.get('/trending/movie/day');\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieInfo = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/reviews`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/credits`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const getMoviesBySearch = async query => {\n  try {\n    const response = await movieApi.get(`/search/movie/`, {\n      params: {\n        query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n","export const API_KEY = 'ee4d1e0ba38fba5e2a885fcbcf829637';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: ${({ theme }) => theme.colors.black};\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  a {\n    text-decoration: none;\n  }\n  li {\n    margin-right: 10px;\n    padding: 10px;\n    border: 2px solid ${({ theme }) => theme.colors.searchBarBgc};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n`;\n\nexport const MovieCardInfo = styled.div`\n  padding: 20px;\n`;\n\nexport const MovieCardImg = styled.img`\n  border-radius: 10px;\n  object-fit: cover;\n`;\n","import styled from 'styled-components';\n\nexport const MovieGenresStyled = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n`;\n\nexport const MovieGenresItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import { MovieGenresStyled, MovieGenresItem } from './MovieGenres.styled';\n\nexport const MovieGenres = ({ genres }) => {\n  return (\n    <MovieGenresStyled>\n      {genres.map(({ id, name }) => (\n        <MovieGenresItem key={id}>{name}</MovieGenresItem>\n      ))}\n    </MovieGenresStyled>\n  );\n};\n","import { IMG_URL } from 'constants';\nimport {\n  MovieCardWrapper,\n  MovieCardInfo,\n  MovieCardImg,\n} from './MovieCard.styled';\nimport { MovieGenres } from './MovieGenres';\n\nexport const MovieCard = ({ movie }) => {\n  const { title, release_date, vote_average, overview, genres, backdrop_path } =\n    movie;\n\n  return (\n    <MovieCardWrapper>\n      <MovieCardImg\n        src={`${IMG_URL}${backdrop_path}`}\n        alt={`${title}`}\n        width=\"400\"\n        height=\"300\"\n      />\n      <MovieCardInfo>\n        <h2>\n          {title} ({release_date.slice(0, 4)})\n        </h2>\n        <p>User score: {Math.floor(vote_average * 10)}%</p>\n\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <MovieGenres genres={genres} />\n      </MovieCardInfo>\n    </MovieCardWrapper>\n  );\n};\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect, Suspense, useState } from 'react';\nimport { StyledLink, AdditionalInfoList } from './MovieDetails.styled';\nimport { getMovieInfo } from 'api/fetchMovie';\nimport { MovieCard } from './MovieCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const movie = await getMovieInfo(Number(movieId));\n      setMovie(movie);\n    };\n    getMovie();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <div>\n        <StyledLink to={backLinkHref}>Back to movies list</StyledLink>\n        <MovieCard movie={movie} />\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <AdditionalInfoList>\n          <li>\n            <Link to=\"cast\" state={{ id: movieId, from: backLinkHref }}>\n              Read about our cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ id: movieId, from: backLinkHref }}>\n              Get to know the reviews\n            </Link>\n          </li>\n        </AdditionalInfoList>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieApi","axios","baseURL","BASE_URL","params","api_key","API_KEY","language","include_adult","fetchTrendingMovie","get","response","data","results","toast","getMovieInfo","id","getMovieReviews","getMovieCredits","getMoviesBySearch","query","IMG_URL","StyledLink","styled","Link","theme","colors","black","AdditionalInfoList","searchBarBgc","MovieCardWrapper","MovieCardInfo","MovieCardImg","MovieGenresStyled","MovieGenresItem","MovieGenres","genres","map","name","MovieCard","movie","title","release_date","vote_average","overview","backdrop_path","src","alt","width","height","slice","Math","floor","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","getMovie","Number","to","Suspense","fallback"],"sourceRoot":""}